name: Kernel Build

on:
  workflow_dispatch:
  push:
  schedule:
    - cron: '30 5 * * 1'

jobs:

  build:
    strategy:
      matrix:
        branch: ['linux-msft-wsl-6.6.y']
    runs-on: ubuntu-latest
    steps:

    - name: Checkout WSL2 Kernel Builder
      uses: actions/checkout@v4

    - name: Checkout WSL2 Kernel Repo
      uses: actions/checkout@v4
      with:
        repository: 'microsoft/WSL2-Linux-Kernel'
        ref: ${{ matrix.branch }}
        path: 'kernel-${{ matrix.branch }}'

    - name: Install Toolchain
      run: |
        sudo apt update
        sudo apt install build-essential flex bison libssl-dev libelf-dev libncurses-dev autoconf libudev-dev libtool

    - name: Get Default Config
      working-directory: ./kernel-${{ matrix.branch }}
      run: cp Microsoft/config-wsl ./.config

    - name: Apply USB Config # for 5.4. branch only
      if: ${{ matrix.branch == 'linux-msft-wsl-6.6.y' }}
      working-directory: ./kernel-${{ matrix.branch }}
      run: scripts/kconfig/merge_config.sh -m -y .config ../waydroid.config

    - name: Apply Waydroid Config # for Waydroid config
      working-directory: ./kernel-${{ matrix.branch }}
      run: scripts/kconfig/merge_config.sh -m -y .config ../usb.config

    - name: Apply CAN Config and Set Custom Kernel Name
      working-directory: ./kernel-${{ matrix.branch }}
      run: |
        sed -Ei "s/(CONFIG_LOCALVERSION=\")(.*)(\")/\1-jimedrand-WSL2\3/g" .config
        for file in ../[^usb]*.config; do scripts/kconfig/merge_config.sh -m -y .config $file ; done
        scripts/kconfig/merge_config.sh -y .config ../can.config

    - name: Verify Binder Module Configuration
      working-directory: ./kernel-${{ matrix.branch }}
      run: |
        echo "=== Verifying Binder Module Configuration ==="
        
        # Check if binder modules are enabled
        binder_configs=(
          "CONFIG_ANDROID_BINDER_IPC"
          "CONFIG_ANDROID_BINDERFS"
          "CONFIG_ANDROID_BINDER_DEVICES"
        )
        
        config_missing=false
        
        for config in "${binder_configs[@]}"; do
          if grep -q "^${config}=" .config; then
            value=$(grep "^${config}=" .config | cut -d'=' -f2)
            echo "✓ ${config}=${value}"
          else
            echo "✗ ${config} not found or not enabled"
            config_missing=true
          fi
        done
        
        # Check ANDROID_BINDER_DEVICES value specifically
        if grep -q "^CONFIG_ANDROID_BINDER_DEVICES=" .config; then
          devices=$(grep "^CONFIG_ANDROID_BINDER_DEVICES=" .config | cut -d'=' -f2 | tr -d '"')
          echo "Binder devices: ${devices}"
          if [[ "${devices}" == *"binder"* ]] && [[ "${devices}" == *"hwbinder"* ]] && [[ "${devices}" == *"vndbinder"* ]]; then
            echo "✓ All required binder devices are configured"
          else
            echo "⚠ Warning: Some binder devices might be missing"
          fi
        fi
        
        if [ "$config_missing" = true ]; then
          echo "⚠ Warning: Some Binder configurations are missing. Waydroid might not work properly."
        else
          echo "✓ All Binder configurations are present"
        fi
        
        echo "=== Binder Verification Complete ==="

    - name: Build
      working-directory: ./kernel-${{ matrix.branch }}
      run: |
        make -j $(echo `nproc` + 1 | bc)
        mv arch/x86/boot/bzImage arch/x86/boot/${{ matrix.branch }}-jimedrand-bzImage

    - name: Archive kernel
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.branch }}-jimedrand
        path: kernel-${{ matrix.branch }}/arch/x86/boot/${{ matrix.branch }}-jimedrand-bzImage
